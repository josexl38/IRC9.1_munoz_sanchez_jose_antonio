---
- name: Initialize Kubernetes cluster
  command: |
    kubeadm init \
      --pod-network-cidr={{ pod_network_cidr }} \
      --ignore-preflight-errors=all \
      --apiserver-advertise-address={{ ansible_default_ipv4.address }} \
      --cri-socket=unix:///var/run/containerd/containerd.sock \
      --upload-certs \
      --control-plane-endpoint={{ ansible_default_ipv4.address }}
  register: kubeadm_init
  args:
    creates: /etc/kubernetes/admin.conf
  environment:
    CONTAINERD_ADDRESS: /var/run/containerd/containerd.sock

- name: Create .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes

- name: Save join command to file
  copy:
    content: "{{ kubeadm_init.stdout_lines[-1] }}"
    dest: /tmp/kubernetes_join_command
    mode: '0644'

- name: Install Pod network (Flannel)
  command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  when: kubeadm_init is succeeded

- name: Verify cluster status
  block:
    - name: Check nodes
      command: kubectl get nodes -o wide
      register: kubectl_nodes
      changed_when: false
      
    - name: Check pods
      command: kubectl get pods -A
      register: kubectl_pods
      changed_when: false
      
    - name: Show cluster info
      debug:
        msg: |
          Cluster initialized successfully!
          Nodes:
          {{ kubectl_nodes.stdout }}
          
          Pods:
          {{ kubectl_pods.stdout }}
  when: kubeadm_init is succeeded
